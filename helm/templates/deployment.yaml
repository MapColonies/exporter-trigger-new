{{- $releaseName := .Release.Name -}}
{{- $chartName := include "exporter-trigger.name" . -}}
{{- $metrics := (include "common.metrics.merged" .) | fromYaml }}
{{- $cloudProviderFlavor := include "exporter-trigger.cloudProviderFlavor" . -}}
{{- $cloudProviderDockerRegistryUrl := include "exporter-trigger.cloudProviderDockerRegistryUrl" . -}}
{{- $cloudProviderImagePullSecretName := include "exporter-trigger.cloudProviderImagePullSecretName" . -}}
{{- $imageTag := include "exporter-trigger.tag" . -}}
{{- if .Values.enabled -}}

{{- $fs := (include "common.fs.merged" .) | fromYaml }}
{{- $configmapName := include "configmap.fullname" . }}
{{- $deploymentName := include "deployment.fullname" . }}
{{ $gpkgPath := (printf "%s%s" "/app/tiles_outputs/" $fs.internalPvc.gpkgSubPath) }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploymentName }}
  labels:
    app: {{ $chartName }}
    component: {{ $chartName }}
    environment: {{ include "exporter-trigger.environment" . }}
    release: {{ $releaseName }}
    {{- include "exporter-trigger.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $chartName }}
      release: {{ $releaseName }}
      run: {{ $releaseName }}-{{ $chartName }}
      {{- include "exporter-trigger.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ $chartName }}
        release: {{ $releaseName }}
        run: {{ $releaseName }}-{{ $chartName }}
        {{- include "exporter-trigger.selectorLabels" . | nindent 8 }}
      annotations:
        {{- if .Values.resetOnConfigChange }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
        {{ if $metrics.enabled }}
        prometheus.io/port: {{ $metrics.prometheus.port | quote }}
        prometheus.io/scrape: {{ $metrics.prometheus.scrape | quote }}
        {{- end }}
    spec:
      {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
      - name: {{ $cloudProviderImagePullSecretName | quote }}
      {{- end }}    
      containers:
        - name: {{ $releaseName }}
          {{- with .Values.image }}
          image: {{ $cloudProviderDockerRegistryUrl }}{{ .repository }}:{{ $imageTag }}
          {{- end }}
          env:
            - name: SERVER_PORT
              value: {{ .Values.env.targetPort | quote }}
            - name: GPKGS_LOCATION
              value: {{ $gpkgPath }}
          envFrom:
            - configMapRef:
                name: {{ $configmapName }}
          ports:
            - name: http
              containerPort: {{ .Values.env.targetPort }}
              protocol: TCP
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            httpGet:
              path: /liveness
              port: http
          volumeMounts:
            - name: internal-storage
              mountPath: /app/tiles_outputs
          {{- if .Values.resources.enabled }}
          resources:
            {{- toYaml .Values.resources.value | nindent 12 }}
          {{- end }}
      volumes:
        - name: internal-storage
          persistentVolumeClaim:
            claimName: {{ $fs.internalPvc.name }}
{{- end -}}
